name: CI - build and test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      MAVEN_OPTS: -DskipTests=false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: 'maven'

      - name: Cache Gradle (placeholder)
        if: false
        run: echo "no-op"

      - name: Cache Docker buildx (for later docker cache)
        uses: actions/cache@v4
        with:
          path: ~/.cache/docker
          key: ${{ runner.os }}-docker-cache-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-cache-

      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-

      - name: Set up QEMU and Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install mvnw executable
        run: chmod +x ./mvnw

      - name: Run tests
        run: ./mvnw -B test

#      - name: Run integration tests
#        env:
#          SPRING_PROFILES_ACTIVE: test
#        run: ./mvnw -B verify -DskipUnitTests=true

      - name: SonarQube analysis
        if: ${{ secrets.SONAR_TOKEN != '' && secrets.SONAR_HOST_URL != '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./mvnw -B -DskipTests \
            -Dsonar.host.url=${SONAR_HOST_URL} \
            -Dsonar.login=${SONAR_TOKEN} \
            sonar:sonar

      - name: Package application
        run: ./mvnw -B -DskipTests package

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar
